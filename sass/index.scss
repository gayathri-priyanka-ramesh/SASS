// Variables (Can be used directly form here)
// $primary-color: deepskyblue;
// $font-family: "Roboto", sans-serif;

// Using 'math' module for division, etc.
@use "sass:math";

// Import -> used to import the 'Partials' saved with '_filename.scss'
@import 'variable';
body{
    font-family: $font-family;
    font-size: $base-font-size;
}
h1{
    color: $primary-color;
    // Math Rule
    font-size: 35px + 20; //55px
}

@import "colors";
.headpara{
    // Map
    color: map-get($map: $colors, $key: "warning");
}

@import "button";

// Nested Rules
nav{
    background-color: #222;
    padding: 10px;

    a{
        text-decoration: none;
        display: inline-block;
        padding: 5px 10px;
        color: #fff;

        // Pseudo Selectors
        // & -> Current Selector
        &:nth-child(3){
            color: deeppink;
        }
        &:last-child{
            color: orange;
        }
        &:hover{
            color: #00ff00;
        }
    }
}
p{
    line-height: 30px;
    text-indent: 50px;
    // Variable
    font-size: $font-size-lg;

    a{
        text-decoration: none;
        color: tomato;
    }
}

// Conditionals (Operators: == != > >= < <= and or not)
$bg-color: #333;
$text-color: #393;
$width: 700px;
$height: 200px;
$is-div: true;
.box-if{
    background-color: $bg-color;
    padding: 10px;
    width: $width;
    height: $height;
    p{
        @if( $bg-color==$text-color){
            color: #ddd;
        }@else{
            color: deeppink;
        }
        // @if($width>500){
        //     color: gold;
        // }
        @if($width<800 and $height>200){
            border: 5px solid green;
        } @else{
            border: 5px dashed green;
        }
    }
    @if($width>500 or $height>500){
        border: 10px solid gold;
    } @else{
        border: 10px dashed gold;
    }
    @if not $is-div{
        border-radius: 20px;
    } @else{
        border-radius: 75px;
    }
}

// Funtion (Value of single property is returned)
@function px_to_rem($px){
    //concatenates unit 'rem' to calculated value
    // Use either 'math.div()' or 'calc' for division
    @return math.div($px,16) + rem;
    // @return calc($px/16) + rem;
}

// Mixin without Parameter (Include multiple properties and their values) 
@mixin text-style{
    font-family: 'Times New Roman', Times, serif;
    line-height: 2;
    // font-size: 28px;
    font-size: px_to_rem(28); // 28/16=1.75
    text-decoration: underline;
}
.title{
    @include text-style;
    text-transform: uppercase;
}
.para {
    @include text-style;
    text-transform: capitalize;
    font-style: italic;
    text-align: justify;
    color: red;
}

// Utility Class
@import "utilities";
.paradiv{
    background-color: palevioletred;
    border: 5px solid darkmagenta;
    margin: 10px;
    p{
        margin: 0;
        border: 1px solid;
        text-align: justify;
    }
}

// Extend -> Reuse all properties inside it (Used for reusing the properties for Flex-box, Button, etc.)
// '%' -> Extend Property
%border{
    border: 5px solid #888;
    background-color: #333;
    color: #ccc;
    padding: 20px;
    font-size: 1em;
}
.border{
    @extend %border;
}
